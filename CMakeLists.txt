# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(ncvm LANGUAGES C CXX)

# target
add_library(ncvm SHARED "")
set_target_properties(ncvm PROPERTIES OUTPUT_NAME "ncvm")
set_target_properties(ncvm PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/i386/release")
target_include_directories(ncvm PRIVATE
    include
)
target_include_directories(ncvm SYSTEM PRIVATE
    /home/ghost/.xmake/packages/e/extc/@default/ce0dc86df8164021806ff8f7089d92ed/include
)
target_compile_definitions(ncvm PRIVATE
    __NCVM_DYN_LIB_EXPORT
)
target_compile_options(ncvm PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m32>
    $<$<COMPILE_LANGUAGE:CXX>:-m32>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
)
set_target_properties(ncvm PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ncvm PRIVATE c_std_90)
if(MSVC)
    target_compile_options(ncvm PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ncvm PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ncvm PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ncvm PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ncvm PRIVATE
    extc-static
)
target_link_directories(ncvm PRIVATE
    /home/ghost/.xmake/packages/e/extc/@default/ce0dc86df8164021806ff8f7089d92ed/lib
)
target_link_options(ncvm PRIVATE
    -m32
)
target_sources(ncvm PRIVATE
    src/ncvm.c
)

# target
add_executable(ncvm-cpp-example "")
set_target_properties(ncvm-cpp-example PROPERTIES OUTPUT_NAME "ncvm-cpp-example")
set_target_properties(ncvm-cpp-example PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/i386/release")
add_dependencies(ncvm-cpp-example ncvm-static)
target_include_directories(ncvm-cpp-example PRIVATE
    include
)
target_compile_options(ncvm-cpp-example PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m32>
    $<$<COMPILE_LANGUAGE:CXX>:-m32>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(ncvm-cpp-example PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ncvm-cpp-example PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ncvm-cpp-example PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ncvm-cpp-example PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ncvm-cpp-example PRIVATE
    ncvm-static
    extc-static
)
target_link_directories(ncvm-cpp-example PRIVATE
    build/linux/i386/release
    /home/ghost/.xmake/packages/e/extc/@default/ce0dc86df8164021806ff8f7089d92ed/lib
)
target_link_options(ncvm-cpp-example PRIVATE
    -m32
)
target_sources(ncvm-cpp-example PRIVATE
    examples/main.cpp
)

# target
add_library(ncvm-static STATIC "")
set_target_properties(ncvm-static PROPERTIES OUTPUT_NAME "ncvm-static")
set_target_properties(ncvm-static PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/i386/release")
target_include_directories(ncvm-static PRIVATE
    include
)
target_include_directories(ncvm-static SYSTEM PRIVATE
    /home/ghost/.xmake/packages/e/extc/@default/ce0dc86df8164021806ff8f7089d92ed/include
)
target_compile_options(ncvm-static PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m32>
    $<$<COMPILE_LANGUAGE:CXX>:-m32>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(ncvm-static PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ncvm-static PRIVATE c_std_90)
if(MSVC)
    target_compile_options(ncvm-static PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ncvm-static PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ncvm-static PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ncvm-static PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ncvm-static PRIVATE
    extc-static
)
target_link_directories(ncvm-static PRIVATE
    /home/ghost/.xmake/packages/e/extc/@default/ce0dc86df8164021806ff8f7089d92ed/lib
)
target_link_options(ncvm-static PRIVATE
    -m32
)
target_sources(ncvm-static PRIVATE
    src/ncvm.c
)

